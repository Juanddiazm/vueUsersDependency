{"remainingRequest":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js!/home/juan/Documentos/vueUsersDependency/node_modules/eslint-loader/index.js??ref--13-0!/home/juan/Documentos/vueUsersDependency/src/store/index.js","dependencies":[{"path":"/home/juan/Documentos/vueUsersDependency/src/store/index.js","mtime":1571163836478},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n\n/* eslint-disable */\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport firebase from 'firebase';\nimport { router } from \"../router/index\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: null,\n    status: null,\n    error: null,\n    users: [],\n    dependencies: [],\n    dependenciesName: []\n  },\n  mutations: {\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n    },\n    removeUser: function removeUser(state) {\n      state.user = null;\n    },\n    setStatus: function setStatus(state, payload) {\n      state.status = payload;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload;\n    },\n    setUsers: function setUsers(state, payload) {\n      state.users = payload;\n    },\n    setDepedencies: function setDepedencies(state, payload) {\n      state.dependencies = payload;\n    },\n    setDepedenciesName: function setDepedenciesName(state, payload) {\n      state.dependenciesName = payload;\n    }\n  },\n  actions: {\n    editUserAction: function editUserAction(_ref, payload) {\n      var commit = _ref.commit;\n      firebase.firestore().collection(\"Users\").doc(payload.id).update({\n        \"name\": payload.name,\n        \"lastName\": payload.lastName,\n        \"email\": payload.email,\n        \"dependency\": payload.dependency,\n        \"valid_to\": payload.valid_to,\n        \"active\": payload.active\n      }).then(function (response) {\n        alert('success');\n        commit('setStatus', 'success');\n        commit('setError', null);\n      }).catch(function (error) {\n        alert('failure');\n        commit('setStatus', 'failure');\n        commit('setError', error.message);\n      });\n    },\n    deleteUserAction: function deleteUserAction(_ref2, payload) {\n      var commit = _ref2.commit;\n      firebase.firestore().collection(\"Users\").doc(payload.id).delete().then(function (response) {\n        alert('User deleted'); // commit('setUser', payload.email)\n\n        commit('setStatus', 'success');\n        commit('setError', null);\n      }).catch(function (error) {\n        alert('failure delete user');\n        commit('setStatus', 'failure');\n        commit('setError', error.message);\n      });\n    },\n    editDepedencyAction: function editDepedencyAction(_ref3, payload) {\n      var commit = _ref3.commit;\n      firebase.firestore().collection(\"Dependency\").doc(payload.id).update({\n        \"name\": payload.name,\n        \"coordinator\": payload.coordinator,\n        \"location\": payload.location,\n        \"active\": payload.active,\n        \"maxNumUsers\": payload.maxNumUsers\n      }).then(function (response) {\n        alert('Dependency edited successfully'); // commit('setUser', payload.email)\n\n        commit('setStatus', 'success');\n        commit('setError', null);\n      }).catch(function (error) {\n        alert('failure');\n        commit('setStatus', 'failure');\n        commit('setError', error.message);\n      });\n    },\n    deleteDependencyAction: function deleteDependencyAction(_ref4, payload) {\n      var commit = _ref4.commit;\n      firebase.firestore().collection(\"Dependency\").doc(payload.id).delete().then(function (response) {\n        alert('Dependency deleted');\n        commit('setStatus', 'success');\n        commit('setError', null);\n      }).catch(function (error) {\n        alert('failure delete dependency');\n        commit('setStatus', 'failure');\n        commit('setError', error.message);\n      });\n    },\n    signUpAction: function signUpAction(_ref5, payload) {\n      var commit = _ref5.commit;\n      commit('setStatus', 'loading'); // firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\n\n      firebase.firestore().collection(\"Users\").doc(payload.id).set(payload).then(function (response) {\n        alert('success'); // commit('setUser', payload.email)\n\n        commit('setStatus', 'success');\n        commit('setError', null);\n        router.push('login');\n      }).catch(function (error) {\n        alert('failure');\n        commit('setStatus', 'failure');\n        commit('setError', error.message);\n      });\n    },\n    signInAction: function signInAction(_ref6, payload) {\n      var commit = _ref6.commit;\n      firebase.firestore().collection(\"Users\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          if (doc.data().email == payload.email) {\n            alert('Loggin!');\n            commit('setUser', doc.data());\n            sessionStorage.setItem('user', doc.data());\n            commit('setStatus', 'success');\n            commit('setError', null);\n            router.push('homeUser');\n          }\n        });\n      }).catch(function (error) {\n        commit('setStatus', 'failure');\n        alert('No such document!');\n      });\n    },\n    signOutAction: function signOutAction(_ref7) {\n      var commit = _ref7.commit;\n      router.push('/');\n      commit('setUser', null);\n      sessionStorage.removeItem('user');\n      commit('setStatus', 'success');\n      commit('setError', null); // firebase.auth().signOut()\n      //     .then((response) => {\n      //         commit('setUser', null)\n      //         commit('setStatus', 'success')\n      //         commit('setError', null)\n      //     })\n      //     .catch((error) => {\n      //         commit('setStatus', 'failure')\n      //         commit('setError', error.message)\n      //     })\n    },\n    getUsers: function getUsers(_ref8) {\n      var commit = _ref8.commit;\n      var users = [];\n      firebase.firestore().collection(\"Users\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          users.push(doc.data());\n        });\n        commit('setUsers', users);\n      });\n    },\n    getDependencies: function getDependencies(_ref9) {\n      var commit = _ref9.commit;\n      var dependencies = [];\n      var dependenciesName = [];\n      firebase.firestore().collection(\"Dependency\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          dependencies.push(doc.data());\n          dependenciesName.push(doc.data().name);\n        });\n        commit('setDepedencies', dependencies);\n        commit('setDepedenciesName', dependenciesName);\n      });\n    },\n    addDependencyAccion: function addDependencyAccion(_ref10, payload) {\n      var commit = _ref10.commit;\n      firebase.firestore().collection(\"Dependency\").doc(payload.id).set(payload).then(function (response) {\n        alert('Dependence added successfully');\n      }).catch(function (error) {\n        alert('failure');\n        commit('setError', error.message);\n      });\n    }\n  },\n  getters: {\n    status: function status(state) {\n      return state.status;\n    },\n    user: function user(state) {\n      return state.user;\n    },\n    error: function error(state) {\n      return state.error;\n    },\n    users: function users(state) {\n      return state.users;\n    },\n    dependencies: function dependencies(state) {\n      return state.dependencies;\n    }\n  }\n});",{"version":3,"sources":["/home/juan/Documentos/vueUsersDependency/src/store/index.js"],"names":["Vue","Vuex","firebase","router","use","Store","state","user","status","error","users","dependencies","dependenciesName","mutations","setUser","payload","removeUser","setStatus","setError","setUsers","setDepedencies","setDepedenciesName","actions","editUserAction","commit","firestore","collection","doc","id","update","name","lastName","email","dependency","valid_to","active","then","response","alert","catch","message","deleteUserAction","delete","editDepedencyAction","coordinator","location","maxNumUsers","deleteDependencyAction","signUpAction","set","push","signInAction","get","querySnapshot","forEach","data","sessionStorage","setItem","signOutAction","removeItem","getUsers","getDependencies","addDependencyAccion","getters"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport firebase from 'firebase'\nimport { router } from '../router/index'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n\n    state: {\n        user: null,\n        status: null,\n        error: null,\n\n        users: [],\n        dependencies: [],\n        dependenciesName: []\n    },\n    mutations: {\n\n        setUser(state, payload) {\n            state.user = payload\n        },\n\n        removeUser(state) {\n            state.user = null\n        },\n\n        setStatus(state, payload) {\n            state.status = payload\n        },\n\n        setError(state, payload) {\n            state.error = payload\n        },\n\n        setUsers(state, payload) {\n            state.users = payload\n        },\n\n        setDepedencies(state, payload) {\n            state.dependencies = payload\n        },\n        setDepedenciesName(state, payload) {\n            state.dependenciesName = payload\n        }\n    },\n    actions: {\n        editUserAction({ commit }, payload) {\n            firebase.firestore().collection(\"Users\").doc(payload.id).update({\n                \"name\": payload.name,\n                \"lastName\": payload.lastName,\n                \"email\": payload.email,\n                \"dependency\": payload.dependency,\n                \"valid_to\": payload.valid_to,\n                \"active\": payload.active\n            }).then((response) => {\n                alert('success')\n                commit('setStatus', 'success')\n                commit('setError', null)\n            })\n                .catch((error) => {\n                    alert('failure')\n                    commit('setStatus', 'failure')\n                    commit('setError', error.message)\n                })\n        },\n        deleteUserAction({ commit }, payload) {\n            firebase.firestore().collection(\"Users\").doc(payload.id).delete().then((response) => {\n                alert('User deleted')\n                // commit('setUser', payload.email)\n                commit('setStatus', 'success')\n                commit('setError', null)\n            })\n                .catch((error) => {\n                    alert('failure delete user')\n                    commit('setStatus', 'failure')\n                    commit('setError', error.message)\n                })\n        },\n        editDepedencyAction({ commit }, payload) {\n            firebase.firestore().collection(\"Dependency\").doc(payload.id).update({\n                \"name\": payload.name,\n                \"coordinator\": payload.coordinator,\n                \"location\": payload.location,\n                \"active\": payload.active,\n                \"maxNumUsers\": payload.maxNumUsers\n            }).then((response) => {\n                alert('Dependency edited successfully')\n                // commit('setUser', payload.email)\n                commit('setStatus', 'success')\n                commit('setError', null)\n            })\n                .catch((error) => {\n                    alert('failure')\n                    commit('setStatus', 'failure')\n                    commit('setError', error.message)\n                })\n        },\n        deleteDependencyAction({ commit }, payload) {\n            firebase.firestore().collection(\"Dependency\").doc(payload.id).delete().then((response) => {\n                alert('Dependency deleted')\n                commit('setStatus', 'success')\n                commit('setError', null)\n            })\n                .catch((error) => {\n                    alert('failure delete dependency')\n                    commit('setStatus', 'failure')\n                    commit('setError', error.message)\n                })\n        },\n        signUpAction({ commit }, payload) {\n            commit('setStatus', 'loading')\n            // firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\n            firebase.firestore().collection(\"Users\").doc(payload.id).set(payload)\n                .then((response) => {\n                    alert('success')\n                    // commit('setUser', payload.email)\n                    commit('setStatus', 'success')\n                    commit('setError', null)\n                    router.push('login')\n                })\n                .catch((error) => {\n                    alert('failure')\n                    commit('setStatus', 'failure')\n                    commit('setError', error.message)\n                })\n        },\n\n        signInAction({ commit }, payload) {\n\n            firebase.firestore().collection(\"Users\").get().then(\n                querySnapshot => {\n                    querySnapshot.forEach(doc => {\n                        if (doc.data().email == payload.email) {\n                           \n                            alert('Loggin!')\n                            commit('setUser', doc.data())\n                            sessionStorage.setItem('user', doc.data());\n                            commit('setStatus', 'success')\n                            commit('setError', null)\n                            router.push('homeUser')\n                        }\n                    })\n                }).catch((error) => {\n                    \n                    commit('setStatus', 'failure')\n                    alert('No such document!')\n                });\n\n\n        },\n        signOutAction({ commit }) {\n            router.push('/')\n            commit('setUser', null)\n            sessionStorage.removeItem('user')\n            commit('setStatus', 'success')\n            commit('setError', null)\n\n            // firebase.auth().signOut()\n            //     .then((response) => {\n            //         commit('setUser', null)\n            //         commit('setStatus', 'success')\n            //         commit('setError', null)\n            //     })\n            //     .catch((error) => {\n            //         commit('setStatus', 'failure')\n            //         commit('setError', error.message)\n            //     })\n        },\n\n        getUsers({ commit }) {\n            let users = []\n            firebase.firestore().collection(\"Users\").get().then(\n                querySnapshot => {\n                    querySnapshot.forEach(doc => {\n                        users.push(doc.data())\n                    })\n                    commit('setUsers', users)\n\n                });\n           \n        },\n        getDependencies({ commit }) {\n            let dependencies = []\n            let dependenciesName = []\n            firebase.firestore().collection(\"Dependency\").get().then(\n                querySnapshot => {\n                    querySnapshot.forEach(doc => {\n                        dependencies.push(doc.data())\n                        dependenciesName.push(doc.data().name)\n                    })\n                    commit('setDepedencies', dependencies)\n               \n                    commit('setDepedenciesName', dependenciesName)\n                });\n        },\n\n        addDependencyAccion({ commit }, payload) {\n            \n            firebase.firestore().collection(\"Dependency\").doc(payload.id).set(payload)\n                .then((response) => {\n                    alert('Dependence added successfully')\n                })\n                .catch((error) => {\n                    alert('failure')\n                    commit('setError', error.message)\n                })\n        }\n    },\n\n    getters: {\n        status(state) {\n            return state.status\n        },\n\n        user(state) {\n            return state.user\n        },\n\n        error(state) {\n            return state.error\n        },\n        users(state) {\n            return state.users\n        },\n        dependencies(state) {\n            return state.dependencies\n        }\n\n    }\n})"]}]}