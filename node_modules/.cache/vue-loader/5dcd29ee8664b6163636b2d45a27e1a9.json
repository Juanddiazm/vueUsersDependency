{"remainingRequest":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/Documentos/vueUsersDependency/src/components/user/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/juan/Documentos/vueUsersDependency/src/components/user/Users.vue","mtime":1571168414525},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  components: {},\n  data: () => ({\n    idUser: \"\",\n    editing: true,\n    valid: true,\n    email: \"\",\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@.+/.test(v) || \"E-mail must be valid\"\n    ],\n    name: \"\",\n    lastName: \"\",\n    dependency: \"\",\n    valid_to: \"\",\n    valid_toRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Valid to is required\"\n    ],\n    active: \"\",\n    nameRules: [v => !!v || \"Name is required\"],\n    lastNameRules: [v => !!v || \"Last Name is required\"],\n    statusArr: [\"active\", \"inactive\"]\n  }),\n  computed: {\n    ...mapState({\n      users: state => state.users,\n      dependenciesName: state => state.dependenciesName\n    })\n  },\n  methods: {\n    getUsersWithFirebase() {\n      this.$store.dispatch(\"getUsers\");\n    },\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n        this.reset();\n        this.editing = true;\n        this.getUsersWithFirebase();\n        this.getDependenciesWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n      // this.$store.dispatch(\"getDependenciesName\");\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      const user = {\n        id: this.idUser,\n        name: this.name,\n        lastName: this.lastName,\n        email: this.email,\n        valid_to: this.valid_to,\n        active: this.active,\n        dependency: this.dependency\n      };\n      this.$store.dispatch(\"editUserAction\", user);\n    },\n\n    deleteUserWithFirebase(payload) {\n      this.$store.dispatch(\"deleteUserAction\", payload);\n      this.getUsersWithFirebase();\n    },\n\n    editProcess(payload) {\n      this.idUser = payload.id;\n      this.editing = false;\n      this.email = payload.email;\n      this.name = payload.name;\n      this.lastName = payload.lastName;\n      this.dependency = payload.dependency;\n      this.valid_to = payload.valid_to;\n      this.active = payload.active;\n    }\n  },\n  mounted() {\n    this.getUsersWithFirebase();\n    this.getDependenciesWithFirebase();\n  }\n};\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <v-card>\n    <v-simple-table>\n      <template v-slot:default>\n        <thead>\n          <tr>\n            <th class=\"text-left\">Name</th>\n            <th class=\"text-left\">Last Name</th>\n            <th class=\"text-left\">E-mail</th>\n            <th class=\"text-left\">Dependency</th>\n            <th class=\"text-left\">Valit to</th>\n            <th class=\"text-left\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" v-bind:key=\"user.id\">\n            <td>{{user.name}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.email}}</td>\n            <td>{{user.dependency}}</td>\n            <td>{{user.valid_to}}</td>\n            <td>{{user.active}}</td>\n            <td>\n              <v-btn small color=\"primary\" @click=\"editProcess(user)\">Edit</v-btn>\n              <v-btn small color=\"error\" @click=\"deleteUserWithFirebase(user)\">Delete</v-btn>\n            </td>\n          </tr>\n        </tbody>\n      </template>\n    </v-simple-table>\n\n    <!-- <v-card-title>\n      <v-text-field v-model=\"search\" label=\"Search\" single-line hide-details></v-text-field>\n    </v-card-title>\n    <v-data-table :headers=\"headers\" :items=\"users\" :search=\"search\"></v-data-table>-->\n    <v-container>\n      <v-layout row wrap>\n        <v-flex>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"email\"\n              :rules=\"emailRules\"\n              label=\"E-mail\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"name\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"lastName\"\n              :rules=\"lastNameRules\"\n              label=\"Last Name\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n            :disabled=\"editing\"\n              v-model=\"valid_to\"\n              :rules=\"valid_toRules\"\n              label=\"Valid to mm/dd/yyyy\"\n              required\n            ></v-text-field>\n\n            <v-select\n              :disabled=\"editing\"\n              v-model=\"dependency\"\n              :items=\"dependenciesName\"\n              label=\"Dependency\"\n              solo\n            ></v-select>\n\n            <v-text-field  v-model=\"valid_to\" label=\"Valid to\" required></v-text-field>\n\n            <v-select :disabled=\"editing\" v-model=\"active\" :items=\"statusArr\" label=\"Status\" solo></v-select>\n\n            <v-btn :disabled=\"!valid || editing\" color=\"success\" @click=\"validate\">Edit</v-btn>\n\n            <v-btn color=\"error\" @click=\"reset\">Reset Form</v-btn>\n          </v-form>\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </v-card>\n</template>\n<script>\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  components: {},\n  data: () => ({\n    idUser: \"\",\n    editing: true,\n    valid: true,\n    email: \"\",\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@.+/.test(v) || \"E-mail must be valid\"\n    ],\n    name: \"\",\n    lastName: \"\",\n    dependency: \"\",\n    valid_to: \"\",\n    valid_toRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Valid to is required\"\n    ],\n    active: \"\",\n    nameRules: [v => !!v || \"Name is required\"],\n    lastNameRules: [v => !!v || \"Last Name is required\"],\n    statusArr: [\"active\", \"inactive\"]\n  }),\n  computed: {\n    ...mapState({\n      users: state => state.users,\n      dependenciesName: state => state.dependenciesName\n    })\n  },\n  methods: {\n    getUsersWithFirebase() {\n      this.$store.dispatch(\"getUsers\");\n    },\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n        this.reset();\n        this.editing = true;\n        this.getUsersWithFirebase();\n        this.getDependenciesWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n      // this.$store.dispatch(\"getDependenciesName\");\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      const user = {\n        id: this.idUser,\n        name: this.name,\n        lastName: this.lastName,\n        email: this.email,\n        valid_to: this.valid_to,\n        active: this.active,\n        dependency: this.dependency\n      };\n      this.$store.dispatch(\"editUserAction\", user);\n    },\n\n    deleteUserWithFirebase(payload) {\n      this.$store.dispatch(\"deleteUserAction\", payload);\n      this.getUsersWithFirebase();\n    },\n\n    editProcess(payload) {\n      this.idUser = payload.id;\n      this.editing = false;\n      this.email = payload.email;\n      this.name = payload.name;\n      this.lastName = payload.lastName;\n      this.dependency = payload.dependency;\n      this.valid_to = payload.valid_to;\n      this.active = payload.active;\n    }\n  },\n  mounted() {\n    this.getUsersWithFirebase();\n    this.getDependenciesWithFirebase();\n  }\n};\n</script>"]}]}