{"remainingRequest":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/Documentos/vueUsersDependency/src/components/authentication/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/juan/Documentos/vueUsersDependency/src/components/authentication/Register.vue","mtime":1571168011818},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { calcMD5 } from \"../../utils/md5.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  data: () => ({\n    valid: true,\n    email: \"\",\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@.+/.test(v) || \"E-mail must be valid\"\n    ],\n    password: \"\",\n    confirmPassword: \"\",\n    passwordRules: [v => !!v || \"Password and Confirm password Required\"],\n    name: \"\",\n    lastName: \"\",\n    dependency: \"\",\n    valid_to: \"\",\n    valid_toRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Valid to is required\"\n    ],\n    active: false,\n    nameRules: [v => !!v || \"Name is required\"],\n    lastNameRules: [v => !!v || \"Last Name is required\"]\n  }),\n\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n      // this.$store.dispatch(\"getDependenciesName\");\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      let ran = Math.ceil(Math.random() * 1000000);\n\n      const user = {\n        id: \"\" + ran,\n        name: this.name,\n        lastName: this.lastName,\n        email: this.email,\n        password: calcMD5(this.password),\n        dependency: this.dependency,\n        valid_to: this.valid_to,\n        active: \"inactive\"\n      };\n      this.$store.dispatch(\"signUpAction\", user);\n    }\n  },\n  mounted() {\n    this.getDependenciesWithFirebase();\n  },\n  computed: {\n    ...mapState({\n      dependenciesName: state => state.dependenciesName\n    })\n  }\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/authentication","sourcesContent":["<template>\n  <v-container>\n    <v-layout row wrap>\n      <v-flex>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\n\n          <v-text-field v-model=\"password\" :rules=\"passwordRules\" label=\"Password\" required></v-text-field>\n\n          <v-text-field\n            v-model=\"confirmPassword\"\n            :rules=\"passwordRules\"\n            label=\"Confirm Password\"\n            required\n          ></v-text-field>\n\n          <v-text-field v-model=\"name\" :rules=\"nameRules\" label=\"Name\" required></v-text-field>\n\n          <v-text-field v-model=\"lastName\" :rules=\"lastNameRules\" label=\"Last Name\" required></v-text-field>\n\n          <!-- <v-text-field v-model=\"dependency\" label=\"Dependency\" required></v-text-field> -->\n          <v-text-field\n            v-model=\"valid_to\"\n            :rules=\"valid_toRules\"\n            label=\"Valid to mm/dd/yyyy\"\n            required\n          ></v-text-field>\n\n          <!-- <v-date-picker v-model=\"date\" class=\"mt-4\"></v-date-picker> -->\n          <v-select v-model=\"dependency\" :items=\"dependenciesName\" label=\"Dependency\" solo></v-select>\n\n          <v-btn :disabled=\"!valid\" color=\"success\" @click=\"validate\">Register</v-btn>\n\n          <v-btn color=\"error\" @click=\"reset\">Reset Form</v-btn>\n        </v-form>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { calcMD5 } from \"../../utils/md5.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  data: () => ({\n    valid: true,\n    email: \"\",\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@.+/.test(v) || \"E-mail must be valid\"\n    ],\n    password: \"\",\n    confirmPassword: \"\",\n    passwordRules: [v => !!v || \"Password and Confirm password Required\"],\n    name: \"\",\n    lastName: \"\",\n    dependency: \"\",\n    valid_to: \"\",\n    valid_toRules: [\n      v =>\n        /((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]{2})/.test(\n          v\n        ) || \"Date must be valid\",\n      v => !!v || \"Valid to is required\"\n    ],\n    active: false,\n    nameRules: [v => !!v || \"Name is required\"],\n    lastNameRules: [v => !!v || \"Last Name is required\"]\n  }),\n\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n      // this.$store.dispatch(\"getDependenciesName\");\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      let ran = Math.ceil(Math.random() * 1000000);\n\n      const user = {\n        id: \"\" + ran,\n        name: this.name,\n        lastName: this.lastName,\n        email: this.email,\n        password: calcMD5(this.password),\n        dependency: this.dependency,\n        valid_to: this.valid_to,\n        active: \"inactive\"\n      };\n      this.$store.dispatch(\"signUpAction\", user);\n    }\n  },\n  mounted() {\n    this.getDependenciesWithFirebase();\n  },\n  computed: {\n    ...mapState({\n      dependenciesName: state => state.dependenciesName\n    })\n  }\n};\n</script>"]}]}