{"remainingRequest":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/Documentos/vueUsersDependency/src/components/dependency/Dependencies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/juan/Documentos/vueUsersDependency/src/components/dependency/Dependencies.vue","mtime":1571154450499},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  components: {},\n  data: () => ({\n    id: \"\",\n    editing: true,\n    valid: true,\n    location: \"\",\n    locationRules: [v => !!v || \"Location is required\"],\n    name: \"\",\n    coordinator: \"\",\n    maxNumUsers: \"\",\n    // eslint-disable-next-line\n    maxNumUsersRules: [\n      v =>\n        /(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]/.test(v) ||\n        \"Max number of user must be valid\"\n    ],\n    active: \"\",\n    nameRules: [v => !!v || \"Name is required\"],\n    coordinatorRules: [v => !!v || \"Coordinator is required\"],\n    statusArr: [\"active\", \"inactive\"]\n  }),\n  computed: {\n    ...mapState({\n      dependencies: state => state.dependencies\n    })\n  },\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.editWithFirebase();\n        this.reset();\n        this.editing = true;\n        this.getDependenciesWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    editWithFirebase() {\n      const dep = {\n        id: this.id,\n        name: this.name,\n        coordinator: this.coordinator,\n        location: this.location,\n        active: this.active,\n        maxNumUsers: this.maxNumUsers\n      };\n      this.$store.dispatch(\"editDepedencyAction\", dep);\n    },\n\n    deleteDependencyWithFirebase(payload) {\n      this.$store.dispatch(\"deleteDependencyAction\", payload);\n      this.getDependenciesWithFirebase();\n    },\n\n    editProcess(payload) {\n      this.editing = false;\n      this.id = payload.id;\n      this.name = payload.name;\n      this.coordinator = payload.coordinator;\n      this.active = payload.active;\n      this.location = payload.location;\n      this.maxNumUsers = payload.maxNumUsers;\n    }\n  },\n  mounted() {\n    this.getDependenciesWithFirebase();\n  }\n};\n",{"version":3,"sources":["Dependencies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dependencies.vue","sourceRoot":"src/components/dependency","sourcesContent":["<template>\n  <v-card>\n    <v-simple-table>\n      <template v-slot:default>\n        <thead>\n          <tr>\n            <th class=\"text-left\">Name</th>\n            <th class=\"text-left\">Coordinator</th>\n            <th class=\"text-left\">Location</th>\n            <th class=\"text-left\">Max number of users</th>\n            <th class=\"text-left\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"dependency in dependencies\" v-bind:key=\"dependency.id\">\n            <td>{{dependency.name}}</td>\n            <td>{{dependency.coordinator}}</td>\n            <td>{{dependency.location}}</td>\n            <td>{{dependency.maxNumUsers}}</td>\n            <td>{{dependency.active}}</td>\n            <td>\n              <v-btn small color=\"primary\" @click=\"editProcess(dependency)\">Edit</v-btn>\n              <v-btn small color=\"error\" @click=\"deleteDependencyWithFirebase(dependency)\">Delete</v-btn>\n            </td>\n          </tr>\n        </tbody>\n      </template>\n    </v-simple-table>\n    <v-container>\n      <v-layout row wrap>\n        <v-flex>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"name\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"coordinator\"\n              :rules=\"coordinatorRules\"\n              label=\"Coordinator\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              :disabled=\"editing\"\n              v-model=\"location\"\n              :rules=\"locationRules\"\n              label=\"Location\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              :disabled=\"editing\"\n              type=\"number\"\n              v-model=\"maxNumUsers\"\n              :rules=\"maxNumUsersRules\"\n              label=\"Maximum number of users\"\n              required\n            ></v-text-field>\n\n            <v-select :disabled=\"editing\" v-model=\"active\" :items=\"statusArr\" label=\"Status\" solo></v-select>\n\n            <v-btn :disabled=\"!valid || editing\" color=\"success\" @click=\"validate\">Edit</v-btn>\n\n            <v-btn color=\"error\" @click=\"reset\">Reset Form</v-btn>\n          </v-form>\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </v-card>\n</template>\n<script>\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  components: {},\n  data: () => ({\n    id: \"\",\n    editing: true,\n    valid: true,\n    location: \"\",\n    locationRules: [v => !!v || \"Location is required\"],\n    name: \"\",\n    coordinator: \"\",\n    maxNumUsers: \"\",\n    // eslint-disable-next-line\n    maxNumUsersRules: [\n      v =>\n        /(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]/.test(v) ||\n        \"Max number of user must be valid\"\n    ],\n    active: \"\",\n    nameRules: [v => !!v || \"Name is required\"],\n    coordinatorRules: [v => !!v || \"Coordinator is required\"],\n    statusArr: [\"active\", \"inactive\"]\n  }),\n  computed: {\n    ...mapState({\n      dependencies: state => state.dependencies\n    })\n  },\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.editWithFirebase();\n        this.reset();\n        this.editing = true;\n        this.getDependenciesWithFirebase();\n      }\n    },\n\n    getDependenciesWithFirebase() {\n      this.$store.dispatch(\"getDependencies\");\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    editWithFirebase() {\n      const dep = {\n        id: this.id,\n        name: this.name,\n        coordinator: this.coordinator,\n        location: this.location,\n        active: this.active,\n        maxNumUsers: this.maxNumUsers\n      };\n      this.$store.dispatch(\"editDepedencyAction\", dep);\n    },\n\n    deleteDependencyWithFirebase(payload) {\n      this.$store.dispatch(\"deleteDependencyAction\", payload);\n      this.getDependenciesWithFirebase();\n    },\n\n    editProcess(payload) {\n      this.editing = false;\n      this.id = payload.id;\n      this.name = payload.name;\n      this.coordinator = payload.coordinator;\n      this.active = payload.active;\n      this.location = payload.location;\n      this.maxNumUsers = payload.maxNumUsers;\n    }\n  },\n  mounted() {\n    this.getDependenciesWithFirebase();\n  }\n};\n</script>"]}]}