{"remainingRequest":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/Documentos/vueUsersDependency/src/components/dependency/DependencyRegister.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/juan/Documentos/vueUsersDependency/src/components/dependency/DependencyRegister.vue","mtime":1571157606285},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/Documentos/vueUsersDependency/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nexport default {\n  data: () => ({\n    itemsStatus: [\"available\", \"unavailable\"],\n    valid: true,\n    name: \"\",\n    nameRules: [v => !!v || \"Dependecy's name is required\"],\n\n    coordinator: \"\",\n    coordinatorRules: [v => !!v || \"Coordinator's name is required\"],\n\n    maxNumUsers: \"\",\n    // eslint-disable-next-line\n    maxNumUsersRules: [\n      v => /(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]/.test(v) || \"Max number of user must be valid\"\n    ],\n\n    active: \"\",\n    activeRules: [v => !!v || \"Status Required\"],\n\n    location: \"\",\n    locationRules: [v => !!v || \"Location is required\"]\n  }),\n\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n      }\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      let ran = Math.ceil(Math.random() * 1000000);\n      const dependency = {\n        id: \"\"+ran,\n        name: this.name,\n        coordinator: this.coordinator,\n        maxNumUsers: this.maxNumUsers,\n        location: this.location,\n        active: this.active\n      };\n      this.$store.dispatch(\"addDependencyAccion\", dependency);\n    }\n  }\n};\n",{"version":3,"sources":["DependencyRegister.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DependencyRegister.vue","sourceRoot":"src/components/dependency","sourcesContent":["<template>\n  <v-container>\n    <v-layout row wrap>\n      <v-flex>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-text-field v-model=\"name\" :rules=\"nameRules\" label=\"Dependency Name\" required></v-text-field>\n\n          <v-text-field\n            v-model=\"coordinator\"\n            :rules=\"coordinatorRules\"\n            label=\"Coordinator\"\n            required\n          ></v-text-field>\n\n          <v-text-field\n            type=\"number\"\n            v-model=\"maxNumUsers\"\n            :rules=\"maxNumUsersRules\"\n            label=\"Maximum number of users\"\n            required\n          ></v-text-field>\n\n          <v-text-field v-model=\"location\" :rules=\"locationRules\" label=\"Location\" required></v-text-field>\n\n          <!-- <v-text-field v-model=\"active\" :rules=\"activeRules\" label=\"Status\" required></v-text-field> -->\n\n          <v-select v-model=\"active\" :items=\"itemsStatus\" label=\"Status\" solo></v-select>\n\n          <v-btn :disabled=\"!valid\" color=\"success\" @click=\"validate\">Register</v-btn>\n\n          <v-btn color=\"error\" @click=\"reset\">Reset Form</v-btn>\n        </v-form>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n\n\nexport default {\n  data: () => ({\n    itemsStatus: [\"available\", \"unavailable\"],\n    valid: true,\n    name: \"\",\n    nameRules: [v => !!v || \"Dependecy's name is required\"],\n\n    coordinator: \"\",\n    coordinatorRules: [v => !!v || \"Coordinator's name is required\"],\n\n    maxNumUsers: \"\",\n    // eslint-disable-next-line\n    maxNumUsersRules: [\n      v => /(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]/.test(v) || \"Max number of user must be valid\"\n    ],\n\n    active: \"\",\n    activeRules: [v => !!v || \"Status Required\"],\n\n    location: \"\",\n    locationRules: [v => !!v || \"Location is required\"]\n  }),\n\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        this.registerWithFirebase();\n      }\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    registerWithFirebase() {\n      let ran = Math.ceil(Math.random() * 1000000);\n      const dependency = {\n        id: \"\"+ran,\n        name: this.name,\n        coordinator: this.coordinator,\n        maxNumUsers: this.maxNumUsers,\n        location: this.location,\n        active: this.active\n      };\n      this.$store.dispatch(\"addDependencyAccion\", dependency);\n    }\n  }\n};\n</script>"]}]}